version: v1.0
name: Decko Card Mods
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu2004
global_job_config:
  env_vars:
    - name: CARD_MODS_REPO_PATH
      value: "/home/semaphore/card-mods"
    - name: BUNDLE_PATH
      value: "~/bundle/"
    - name: CARD_LOAD_STRATEGY
      value: tmp_files
  secrets:
    - name: cardmods-qlty-coverage
    - name: cardmods-cypress
  prologue:
    commands:
      - checkout # semaphore does git checkout and cds into card-mods
      - sem-version ruby 3.2.4
      - gem update --system
      - alias be='bundle exec'
      - cp .semaphore/Gemfile .
      - git submodule update --init --recursive

      # - cache delete bundle-gems # occasionally delete
      - cache restore bundle-gems
      - bundle update # note: gem updates can cause failures
      - cache store bundle-gems ~/bundle

      - sem-service start mysql

      # INSTALL QLTY REPORTER
      # Assumes $QLTY_COVERAGE_TOKEN is set in the environment
      - curl https://qlty.sh | sh
      - source /home/semaphore/.bash_profile

      - be decko new monkey --monkey
      - cp .semaphore/Gemfile monkey
      - cp .semaphore/.rspec monkey
      - cp .semaphore/.simplecov monkey

      - cd monkey
      - bundle lock # new Gemfile.lock in deck (gems are already installed above)
      - be decko setup
      - be decko update
      # - be rake card:eat -- -t all


      # TWEAK ENVIRONMENTAL VARIABLES
      # ...that are too complex for the env_vars config.

      # without the following, code climate uses git to get git details.
      # Semaphore uses the merge sha for PRS, so this leads to coverage report failures.
      - if [ $SEMAPHORE_GIT_PR_SHA ]; then export GIT_COMMIT_SHA=$SEMAPHORE_GIT_PR_SHA; fi;

blocks:
  - name: Unit Tests
    task:
      env_vars:
        - name: RAILS_ENV
          value: test
      prologue:
        commands:
          - $CARD_MODS_REPO_PATH/cc-test-reporter before-build
      jobs:
        - name: RSpec
          commands:
            - be decko rspec -s
      epilogue:
        always:
          commands:
            - test-results publish junit.xml
        on_pass:
          commands:
            - cd $CARD_MODS_REPO_PATH
            - qlty coverage publish --incomplete --override-commit-sha $SEMAPHORE_GIT_PR_SHA --override-branch $SEMAPHORE_GIT_BRANCH coverage/.resultset.json


  - name: Integration Tests
    task:
      secrets:
        - name: cardmods-cypress
      env_vars:
        - name: RAILS_ENV
          value: cypress
      prologue:
        commands:
          - cp ../.semaphore/cypress.config.js .
          - cp ../.semaphore/decko/decko/spec/package.json .
          - cp -R ../.semaphore/decko/decko/spec/cypress .
          - be decko server -p 5002 &
          # - nvm use 16.0.0
          - yarn install

      jobs:
        - name: Cypress
          commands:
            # --key should not be necessary. secrets not working
            - yarn run cypress run --record
            - pkill -2 -f puma
            - sleep 5

      epilogue:
        always:
          commands:
            - test-results publish /home/semaphore/reports/*.xml
        on_pass:
          commands:
            - cd $CARD_MODS_REPO_PATH
            - qlty coverage publish --incomplete --override-commit-sha $SEMAPHORE_GIT_PR_SHA --override-branch $SEMAPHORE_GIT_BRANCH coverage/.resultset.json

  - name: Coverage Report
    task:
      jobs:
        - name: Qlty Coverage
          commands:
            - qlty coverage complete --override-commit-sha $SEMAPHORE_GIT_PR_SHA

after_pipeline:
  task:
    jobs:
      - name: Publish Results
        commands:
          - test-results gen-pipeline-report
