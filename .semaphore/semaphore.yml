version: v1.0
name: Decko Card Mods
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804
global_job_config:
  env_vars:
    - name: CARD_MODS_REPO_PATH
      value: "/home/semaphore/card-mods"
    - name: BUNDLE_PATH
      value: "~/bundle/"
    - name: CARD_LOAD_STRATEGY
      value: tmp_files
  secrets:
    - name: s3-credentials
    - name: code-climate-mods
  prologue:
    commands:
      - checkout # semaphore does git checkout and cds into card-mods
      - sem-version ruby 3.0.1
      - gem install bundler:2.3.11
      - alias be='bundle exec'
      - cp .semaphore/Gemfile .
      - git submodule update --init --recursive

      - cache restore bundle-gems
      - bundle update # note: gem updates can cause failures
      - cache store bundle-gems ~/bundle

      - sem-service start mysql

      - be decko new monkey --monkey
      - cp .semaphore/Gemfile monkey
      - cp .semaphore/.rspec monkey
      - cp .semaphore/.simplecov monkey

      - cd monkey
      - bundle lock # new Gemfile.lock in deck (gems are already installed above)
      - be decko setup
      - be decko update
      #- be rake card:eat -- -t all

      # INSTALL CODE CLIMATE REPORTER
      - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
      - chmod +x ./cc-test-reporter

      # TWEAK ENVIRONMENTAL VARIABLES
      # ...that are too complex for the env_vars config.

      # without the following, code climate uses git to get git details.
      # Semaphore uses the merge sha for PRS, so this leads to coverage report failures.
      - if [ $SEMAPHORE_GIT_PR_SHA ]; then export GIT_COMMIT_SHA=$SEMAPHORE_GIT_PR_SHA; fi;
      - export S3_PATH="s3://deckodev-test/$SEMAPHORE_PROJECT_NAME/$SEMAPHORE_GIT_BRANCH/coverage/$SEMAPHORE_WORKFLOW_ID/"

blocks:
  - name: Unit Tests
    task:
      env_vars:
        - name: RAILS_ENV
          value: test
      prologue:
        commands:
          - ./cc-test-reporter before-build
      jobs:
        - name: RSpec
          commands:
            - be decko rspec -s
      epilogue:
        on_pass:
          commands:
            - ./cc-test-reporter format-coverage --output "coverage/codeclimate.$SEMAPHORE_JOB_ID.json" -t simplecov
            - aws s3 cp "coverage/codeclimate.$SEMAPHORE_JOB_ID.json" $S3_PATH
        always:
          commands:
            - test-results publish junit.xml

  - name: Integration Tests
    task:
      secrets:
        - name: cardmods-cypress
      env_vars:
        - name: RAILS_ENV
          value: cypress
      prologue:
        commands:
          - cp ../.semaphore/cypress.json .
          - cp ../.semaphore/decko/decko/spec/package.json .
          - cp -R ../.semaphore/decko/decko/spec/cypress .
          - be decko server -p 5002 &
          - nvm use 16.0.0
          - yarn install

      jobs:
        - name: Cypress
          commands:
            # --key should not be necessary. secrets not working
            - yarn run cypress run --record --reporter junit --reporter-options "mochaFile=/home/semaphore/reports/cypress-output-[hash].xml"
            - pkill -2 -f puma

      epilogue:
        on_pass:
          commands:
            - ./cc-test-reporter format-coverage --output "coverage/codeclimate.$SEMAPHORE_JOB_ID.json" -t simplecov
            - aws s3 cp "coverage/codeclimate.$SEMAPHORE_JOB_ID.json" $S3_PATH
            - aws s3 sync $S3_PATH coverage/
            - ./cc-test-reporter sum-coverage --output - --parts $(ls -1 coverage/codeclimate.*.json | wc -l) coverage/codeclimate.*.json > coverage/codeclimate.json
            - ./cc-test-reporter upload-coverage

        always:
          commands:
            - test-results publish /home/semaphore/reports/*.xml

after_pipeline:
  task:
    jobs:
      - name: Publish Results
        commands:
          - test-results gen-pipeline-report
