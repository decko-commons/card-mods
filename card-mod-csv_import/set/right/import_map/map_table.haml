- item_view = item_view map_type
- type_name = map_type.cardname
- auto_add = auto_add_type? map_type
- suggestions_on = card.suggest map_type

.nodblclick
  %table.table.import-table._import-table
    %thead
      %tr
        %th.col-1
          .dropdown
            %a.dropdown-toggle{ "data-bs-toggle": "dropdown", href: "#" }
              %i.material-icons indeterminate_check_box
            %ul.dropdown-menu
              - selector_options.each do |status, label|
                %li
                  %a.dropdown-item._import-map-status-option{ href: "#",
                                                              "data-status": status }
                    = label

        %th.col-4
          = type_name
          in Import
        %th.col-4
          = type_name
          on
          = :title.card&.content

        %th.col-2
          Status
        %th.col-1.text-end
          .dropdown.item-map-action-dropdown
            %button.btn.btn-sm.btn-secondary{ "data-bs-toggle": "dropdown" }
              %i.fa.fa-ellipsis-h
            %ul.dropdown-menu
              - first_option_index = auto_add ? 0 : 1
              - { "Selected Items": (first_option_index..4), "Other": [-1] }.each do |header, rows|
                %li.dropdown-header
                  = header
                - rows.each do |i|
                  - action = action_options.keys[i]
                  %a.dropdown-item._import-map-action-option{ href: "#",
                                                              "data-action": action }
                    = action_options[action]


    %tbody
      - card.map[map_type].each do |name_in_file, cardid|
        - cardname = cardid&.cardname
        - status = cardname ? :matched : :unmatched
        %tr._import-map-item.import-map-item{ "data-status": status,
                                              "data-savedstatus": status,
                                              "data-savedmapping": cardname }
          %td
            = item_checkbox
          %td._item-name-in-import-file
            = name_in_file
          %td
            //- input_id = "#{map_type}-#{SecureRandom.hex(10)}"
            .import-map-input-item
              %input{ name: "mapping[#{map_type}][#{CGI.escape name_in_file}]",
                      type: "hidden",
                      class: "_import-mapping",
                      value: cardname,
                      #id: input_id,
                      form: "mappingForm" }

              ._saved-mapping
                - if cardname
                  - if cardname.match? /^AutoAdd/
                    %em
                      = cardname
                  - else
                    = nest cardname, view: item_view
                - elsif suggestions_on
                  ._import-mapping-suggestions{ "data-url": inline_suggestions_url(map_type, name_in_file)}
                    %i.fa.fa-spin.fa-spinner

              ._mapping-label
          %td
            %i.fa.fa-circle
            %span._import-map-status-label
              = status_label status
          %td.text-end
            - if auto_add && !cardname
              %button.btn.btn-sm.me-2.btn-outline-secondary._create-import-item{ "data-bs-toggle": "button", title: "Create #{map_type}" }
                %i.fa.fa-plus
            = suggest_link map_type, name_in_file if suggestions_on

  .d-flex.justify-content-end.py-3
    %span
      Export:
      = export_link map_type
